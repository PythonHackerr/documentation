"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9977],{1063:function(t,e,n){n.r(e),n.d(e,{contentTitle:function(){return u},default:function(){return N},frontMatter:function(){return m},metadata:function(){return s},toc:function(){return k}});var a=n(7462),r=n(3366),l=n(7294),i=n(3905),d=n(1721),o=n(8621),p=function(t){function e(){return t.apply(this,arguments)||this}(0,d.Z)(e,t);var n=e.prototype;return n.componentDidMount=function(){o.Z.initialize("org_test_pk_7e1e22718af02cb9ed4a01233556999c2c02c947"),new o.Z.ui.autocomplete({container:"autocomplete",width:"600px"})},n.render=function(){return l.createElement("div",{id:"autocomplete"})},e}(l.Component),m={title:"Autocomplete"},u=void 0,s={unversionedId:"maps/autocomplete",id:"maps/autocomplete",isDocsHomePage:!1,title:"Autocomplete",description:"Add an address autocomplete widget to your site with just a few lines of code.",source:"@site/docs/maps/autocomplete.mdx",sourceDirName:"maps",slug:"/maps/autocomplete",permalink:"/documentation/maps/autocomplete",editUrl:"https://github.com/radarlabs/docs/edit/main/docs/maps/autocomplete.mdx",tags:[],version:"current",frontMatter:{title:"Autocomplete"},sidebar:"defaultSidebar",previous:{title:"Maps",permalink:"/documentation/maps/maps"},next:{title:"Overview",permalink:"/documentation/sdk"}},k=[{value:"How it works",id:"how-it-works",children:[]},{value:"Quickstart",id:"quickstart",children:[{value:"JavaScript",id:"javascript",children:[]}]},{value:"Configuration",id:"configuration",children:[]}],c={toc:k};function N(t){var e=t.components,n=(0,r.Z)(t,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Add an address autocomplete widget to your site with just a few lines of code."),(0,i.kt)(p,{mdxType:"AutocompleteInput"}),(0,i.kt)("h2",{id:"how-it-works"},"How it works"),(0,i.kt)("p",null,"To use the Radar Autocomplete input, simply initialize the Radar SDK with your publishable key, and specify the container to render the input into."),(0,i.kt)("h2",{id:"quickstart"},"Quickstart"),(0,i.kt)("p",null,"First, ",(0,i.kt)("a",{parentName:"p",href:"https://radar.com/signup"},"sign up")," for Radar and get an API key."),(0,i.kt)("p",null,"Then, get started with the sample code below."),(0,i.kt)("h3",{id:"javascript"},"JavaScript"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />\n    <link href="https://js.radar.com/v4.0.0/radar.css" rel="stylesheet">\n    <script src="https://js.radar.com/v4.0.0/radar.min.js"><\/script>\n  </head>\n\n  <body>\n    <div id="autocomplete" />\n\n    <script type="text/javascript">\n      Radar.initialize(\'prj_live_pk_...\');\n\n      // create autocomplete input\n      Radar.ui.autocomplete({\n        container: \'autocomplete\',\n        width: \'600px\',\n        onSelection: (address) => {\n          // do something with selected address\n        },\n      });\n    <\/script>\n  </body>\n</html>\n')),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"When creating the Autocomplete input, you can provide options to customize the autocomplete behavior, as well as the size of the input."),(0,i.kt)("div",{class:"api-params-table"},(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Possible Values"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"container")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"autocomplete")),(0,i.kt)("td",{parentName:"tr",align:null},"string ","|"," HTMLElement"),(0,i.kt)("td",{parentName:"tr",align:null},"The container the autocomplete input will be rendered into. Can specify the html ",(0,i.kt)("inlineCode",{parentName:"td"},"id"),", or DOM object.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"width")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"400")),(0,i.kt)("td",{parentName:"tr",align:null},"number ","|"," string"),(0,i.kt)("td",{parentName:"tr",align:null},"Width of the input. Can be a number (in pixels) or a valid CSS width.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"debounceMS")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"200")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},"The number of milliseconds to wait after typing is complete to refresh the result list.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"threshold")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"3")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},"Minimum number of characters that need to be typed before fetching results.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"limit")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"8")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},"Maximum number of results to show.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onSelection")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:null},"function ",(0,i.kt)("inlineCode",{parentName:"td"},"(address) => {}")),(0,i.kt)("td",{parentName:"tr",align:null},"Callback with selected address.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onResults")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:null},"function ",(0,i.kt)("inlineCode",{parentName:"td"},"(addresses) => {}")),(0,i.kt)("td",{parentName:"tr",align:null},"Callback with list of address results.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onError")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:null},"function ",(0,i.kt)("inlineCode",{parentName:"td"},"(error) => {}")),(0,i.kt)("td",{parentName:"tr",align:null},"Callback with any errors that occur.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"placeholder")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Search address")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"Input placeholder text")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"responsive")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},"Whether the input should expand to fill the parent container or not. If ",(0,i.kt)("inlineCode",{parentName:"td"},"responsive")," is true ",(0,i.kt)("em",{parentName:"td"},"and")," a ",(0,i.kt)("inlineCode",{parentName:"td"},"width")," is provided, ",(0,i.kt)("inlineCode",{parentName:"td"},"width"),' will be treated as a "max-width".')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"disabled")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},"Disables the input.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"layers")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"place"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"address"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"intersection"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"street"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"neighborhood"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"postalCode"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"locality"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"county"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"state"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"country"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"coarse"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"fine")),(0,i.kt)("td",{parentName:"tr",align:null},"Filter results by layer type. See ",(0,i.kt)("a",{parentName:"td",href:"/documentation/api#query-parameters-3"},"Autocomplete docs")," for more info.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"countryCode")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"2-letter country code to filter results by.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"showMarkers")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},"Show map pin icons next to results in the list.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"markerColor")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"#ACBDC8")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"CSS color for marker icon."))))))}N.isMDXComponent=!0}}]);