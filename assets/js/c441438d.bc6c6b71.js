"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5133],{3905:function(e,a,t){t.d(a,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),d=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=d(e.components);return n.createElement(s.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(t),m=r,k=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return t?n.createElement(k,i(i({ref:a},u),{},{components:t})):n.createElement(k,i({ref:a},u))}));function m(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=c;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8215:function(e,a,t){var n=t(7294);a.Z=function(e){var a=e.children,t=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:t,className:r},a)}},1395:function(e,a,t){t.d(a,{Z:function(){return s}});var n=t(7294),r=t(944),o=t(6010),i="tabItem_1uMI",l="tabItemActive_2DSg";var s=function(e){var a,t=e.lazy,s=e.block,d=e.defaultValue,u=e.values,p=e.groupId,c=e.className,m=n.Children.toArray(e.children),k=null!=u?u:m.map((function(e){return{value:e.props.value,label:e.props.label}})),v=null!=d?d:null==(a=m.find((function(e){return e.props.default})))?void 0:a.props.value,g=(0,r.Z)(),h=g.tabGroupChoices,f=g.setTabGroupChoices,b=(0,n.useState)(v),y=b[0],T=b[1],N=[];if(null!=p){var R=h[p];null!=R&&R!==y&&k.some((function(e){return e.value===R}))&&T(R)}var C=function(e){var a=e.currentTarget,t=N.indexOf(a),n=k[t].value;T(n),null!=p&&(f(p,n),setTimeout((function(){var e,t,n,r,o,i,s,d;(e=a.getBoundingClientRect(),t=e.top,n=e.left,r=e.bottom,o=e.right,i=window,s=i.innerHeight,d=i.innerWidth,t>=0&&o<=d&&r<=s&&n>=0)||(a.scrollIntoView({block:"center",behavior:"smooth"}),a.classList.add(l),setTimeout((function(){return a.classList.remove(l)}),2e3))}),150))},I=function(e){var a,t=null;switch(e.key){case"ArrowRight":var n=N.indexOf(e.target)+1;t=N[n]||N[0];break;case"ArrowLeft":var r=N.indexOf(e.target)-1;t=N[r]||N[N.length-1]}null==(a=t)||a.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":s},c)},k.map((function(e){var a=e.value,t=e.label;return n.createElement("li",{role:"tab",tabIndex:y===a?0:-1,"aria-selected":y===a,className:(0,o.Z)("tabs__item",i,{"tabs__item--active":y===a}),key:a,ref:function(e){return N.push(e)},onKeyDown:I,onFocus:C,onClick:C},null!=t?t:a)}))),t?(0,n.cloneElement)(m.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},m.map((function(e,a){return(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==y})}))))}},9443:function(e,a,t){var n=(0,t(7294).createContext)(void 0);a.Z=n},944:function(e,a,t){var n=t(7294),r=t(9443);a.Z=function(){var e=(0,n.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e}},970:function(e,a,t){t.d(a,{Z:function(){return s}});var n=t(7294),r="alert_19nB",o="alertWarning_1tiz",i="alertInfo_1EfW",l="alertSuccess_7EZp",s=function(e){var a=e.children,t=e.alertType;return"warning"===t?n.createElement("div",{className:"alert "+r+" "+o,role:"alert"},a):"info"===t?n.createElement("div",{className:"alert "+r+" "+i,role:"alert"},a):"success"===t?n.createElement("div",{className:"alert "+r+" "+l,role:"alert"},a):null}},1511:function(e,a,t){var n=t(7294),r=t(944);a.Z=function(){var e=(0,r.Z)(),a=e.tabGroupChoices,t=e.setTabGroupChoices;return(0,n.useEffect)((function(){a.ios||t("ios","swift"),a.android||t("android","kotlin")}),[]),""}},119:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return u},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return m},default:function(){return v}});var n=t(7462),r=t(3366),o=(t(7294),t(3905)),i=t(1395),l=t(8215),s=t(1511),d=t(970),u={sidebar_position:3,sidebar_label:"Android",title:"Android SDK",id:"android",description:"Documentation for Android SDK"},p=void 0,c={unversionedId:"sdk/android",id:"sdk/android",isDocsHomePage:!1,title:"Android SDK",description:"Documentation for Android SDK",source:"@site/docs/sdk/android.mdx",sourceDirName:"sdk",slug:"/sdk/android",permalink:"/documentation/sdk/android",editUrl:"https://github.com/radarlabs/docs/edit/main/docs/sdk/android.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Android",title:"Android SDK",id:"android",description:"Documentation for Android SDK"},sidebar:"defaultSidebar",previous:{title:"iOS",permalink:"/documentation/sdk/ios"},next:{title:"React Native",permalink:"/documentation/sdk/react-native"}},m=[{value:"Install SDK",id:"install-sdk",children:[{value:"Gradle (recommended)",id:"gradle-recommended",children:[]},{value:"Add manually",id:"add-manually",children:[]}]},{value:"Dependencies",id:"dependencies",children:[]},{value:"Initialize SDK",id:"initialize-sdk",children:[]},{value:"Request permissions",id:"request-permissions",children:[]},{value:"Foreground tracking",id:"foreground-tracking",children:[]},{value:"Background tracking for geofencing",id:"background-tracking-for-geofencing",children:[]},{value:"Background tracking for trips",id:"background-tracking-for-trips",children:[]},{value:"Mock tracking for testing",id:"mock-tracking-for-testing",children:[]},{value:"Listening for events with a receiver",id:"listening-for-events-with-a-receiver",children:[]},{value:"Manual tracking",id:"manual-tracking",children:[]},{value:"Identify user",id:"identify-user",children:[]},{value:"Other APIs",id:"other-apis",children:[{value:"Beacons",id:"beacons",children:[]},{value:"Get location",id:"get-location",children:[]},{value:"Context",id:"context",children:[]},{value:"Geocoding",id:"geocoding",children:[]},{value:"Search",id:"search",children:[]},{value:"Distance",id:"distance",children:[]},{value:"Matrix",id:"matrix",children:[]},{value:"Custom events",id:"custom-events",children:[]}]},{value:"Huawei",id:"huawei",children:[]}],k={toc:m};function v(e){var a=e.components,t=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},k,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{mdxType:"DefaultContextValues"}),(0,o.kt)("p",null,"The Radar SDK abstracts away cross-platform differences between location services, allowing you to add geofencing, location tracking, trip tracking, geocoding, and search to your apps with just a few lines of code."),(0,o.kt)("p",null,"Learn how to integrate the Android SDK below. You can also see the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/radarlabs/radar-sdk-android"},"source")," and a ",(0,o.kt)("a",{parentName:"p",href:"https://radarlabs.github.io/radar-sdk-android/"},"detailed SDK reference")," on GitHub."),(0,o.kt)("h2",{id:"install-sdk"},"Install SDK"),(0,o.kt)("p",null,"The best way to add the SDK to your project is via Gradle in Android Studio."),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"For details on the latest SDK releases, see the"," ",(0,o.kt)("a",{href:"https://github.com/radarlabs/radar-sdk-android/releases"},"releases page")," ","on GitHub. You can also star \u2b50\ufe0f and watch \ud83d\udc40 the repo."),(0,o.kt)("p",null,"The SDK is small and typically adds less than 500 KB to your compiled app."),(0,o.kt)("h3",{id:"gradle-recommended"},"Gradle (recommended)"),(0,o.kt)("p",null,"The SDK is distributed using ",(0,o.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/io.radar/sdk"},"Maven Central"),"."),(0,o.kt)("p",null,"Add the SDK to the ",(0,o.kt)("inlineCode",{parentName:"p"},"dependencies")," section of your app's ",(0,o.kt)("inlineCode",{parentName:"p"},"build.gradle")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"dependencies {\n    implementation 'io.radar:sdk:3.5.+'\n}\n")),(0,o.kt)("h3",{id:"add-manually"},"Add manually"),(0,o.kt)("p",null,"You can also add the SDK to your project manually. Download ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/radarlabs/radar-sdk-android/releases"},"the current release")," and unzip the package. The package contains an ",(0,o.kt)("inlineCode",{parentName:"p"},"aar")," file. In Android Studio, add the SDK as a module using ",(0,o.kt)("em",{parentName:"p"},"File")," > ",(0,o.kt)("em",{parentName:"p"},"New Module")," > ",(0,o.kt)("em",{parentName:"p"},"Import .JAR/.AAR Package"),"."),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("p",null,"The SDK depends on ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/jetpack/androidx"},"AndroidX")," and ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/training/location"},"Google Play Services Location")," version ",(0,o.kt)("inlineCode",{parentName:"p"},"17.1.0")," and higher. These libraries will be automatically included as transitive dependencies by Gradle. Learn more about managing dependencies in Gradle ",(0,o.kt)("a",{parentName:"p",href:"https://docs.gradle.org/current/userguide/core_dependency_management.html"},"here"),"."),(0,o.kt)("p",null,"If you haven't already configured your project for Google Play Services, follow the instructions ",(0,o.kt)("a",{parentName:"p",href:"https://developers.google.com/android/guides/google-services-plugin"},"here"),"."),(0,o.kt)("p",null,"As an alternative to Google Play Services, the SDK also optionally supports ",(0,o.kt)("a",{parentName:"p",href:"#huawei"},"Huawei Mobile Services"),"."),(0,o.kt)("p",null,"The SDK currently supports API level ",(0,o.kt)("inlineCode",{parentName:"p"},"16")," and higher."),(0,o.kt)("h2",{id:"initialize-sdk"},"Initialize SDK"),(0,o.kt)("p",null,"When your app starts, in application ",(0,o.kt)("inlineCode",{parentName:"p"},"onCreate()"),", initialize the SDK with your publishable API key, found on the ",(0,o.kt)("a",{parentName:"p",href:"https://radar.com/dashboard/settings"},"Settings page"),"."),(0,o.kt)("p",null,"Use your ",(0,o.kt)("inlineCode",{parentName:"p"},"Test Publishable")," key for testing and non-production environments. Use your ",(0,o.kt)("inlineCode",{parentName:"p"},"Live Publishable")," key for production environments."),(0,o.kt)(d.Z,{alertType:"warning",mdxType:"Alert"},"Note that you should always use your publishable API keys, which are restricted in scope, in the SDK. Do not use your secret API keys, which are unrestricted in scope, in any client-side code."),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'import io.radar.sdk.Radar;\n\npublic class MyApplication extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        Radar.initialize(this, "prj_test_pk...");\n    }\n\n}\n'))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'import io.radar.sdk.Radar\n\nclass MyApplication : Application() {\n\n    override fun onCreate() {\n        super.onCreate()\n\n        Radar.initialize(this, "prj_test_pk...")\n    }\n\n}\n')))),(0,o.kt)("h2",{id:"request-permissions"},"Request permissions"),(0,o.kt)("p",null,"Radar respects ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/training/permissions/requesting.html"},"standard Android location permissions"),"."),(0,o.kt)("p",null,"For foreground tracking or trip tracking with continuous mode, Radar requires the ",(0,o.kt)("inlineCode",{parentName:"p"},"ACCESS_FINE_LOCATION")," permission for precise location and/or the ",(0,o.kt)("inlineCode",{parentName:"p"},"ACCESS_COARSE_LOCATION")," permission for ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/about/versions/12/approximate-location"},"approximate location"),". To start a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/training/location/permissions#foreground"},"foreground service"),", Radar requires the ",(0,o.kt)("inlineCode",{parentName:"p"},"FOREGROUND_SERVICE")," permission. These permissions are automatically added by the SDK manifest along with the ",(0,o.kt)("inlineCode",{parentName:"p"},"INTERNET"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ACCESS_NETWORK_STATE"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"RECEIVE_BOOT_COMPLETED")," permissions."),(0,o.kt)("p",null,"For background tracking or geofencing with responsive mode, and if targeting API level ",(0,o.kt)("inlineCode",{parentName:"p"},"29")," or higher, Radar also requires the new ",(0,o.kt)("inlineCode",{parentName:"p"},"ACCESS_BACKGROUND_LOCATION")," permission. You must add the ",(0,o.kt)("inlineCode",{parentName:"p"},"ACCESS_BACKGROUND_LOCATION")," permission to your manifest manually:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest xmlns:android="http://schemas.android.com/apk/res/android">\n\n    <uses-permission android:name="android.permission.INTERNET" />\n    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />\n    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />\n    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />\n    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />\n    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />\n\n</manifest>\n')),(0,o.kt)(d.Z,{alertType:"Info",mdxType:"Alert"},"If your app already requests the necessary location permissions, you can skip this step."),(0,o.kt)("p",null,"To request foreground and background permissions:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n    ActivityCompat.requestPermissions(this, new String[] { Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_BACKGROUND_LOCATION }, 0);\n} else {\n    ActivityCompat.requestPermissions(this, new String[] { Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION }, 0);\n}\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n    ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_BACKGROUND_LOCATION), 0)\n} else {\n    ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION), 0)\n}\n")))),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"Build and run the app to make sure permissions prompts are displayed!"),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"Not seeing permissions prompts? First, make sure you've added permissions to your manifest. Second, check your device settings to make sure you haven't already granted location permissions."),(0,o.kt)("h2",{id:"foreground-tracking"},"Foreground tracking"),(0,o.kt)("p",null,"Once the user has granted foreground permissions, you can track the user's location in the foreground."),(0,o.kt)("p",null,"To track the user's location in the foreground, call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.trackOnce(new RadarCallback() {\n    @Override\n    public void onComplete(RadarStatus status, Location location, RadarEvent[] events, RadarUser user) {\n        // do something with location, events, user\n    }\n});\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.trackOnce { status, location, events, user ->\n    // do something with location, events, user\n}\n")))),(0,o.kt)("p",null,"You may provide an optional instance of ",(0,o.kt)("inlineCode",{parentName:"p"},"RadarCallback")," with an implementation of ",(0,o.kt)("inlineCode",{parentName:"p"},"onComplete()")," that receives the request status, the user's location, the events generated, if any, and the user. The request status can be:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.SUCCESS")),": success"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_PUBLISHABLE_KEY")),": SDK not initialized"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_PERMISSIONS")),": location permissions not granted"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_LOCATION")),": location services error or timeout (10 seconds)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_NETWORK")),": network error or timeout (10 seconds)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_BAD_REQUEST")),": bad request (missing or invalid params)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_UNAUTHORIZED")),": unauthorized (invalid API key)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_PAYMENT_REQUIRED")),": payment required (organization disabled or usage exceeded)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_FORBIDDEN")),": forbidden (insufficient permissions)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_NOT_FOUND")),": not found"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_RATE_LIMIT")),": too many requests (",(0,o.kt)("a",{parentName:"li",href:"/api#track"},"rate limit")," exceeded)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_SERVER")),": internal server error"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RadarStatus.ERROR_UNKNOWN")),": unknown error")),(0,o.kt)(d.Z,{alertType:"warning",mdxType:"Alert"},"Build and run the app, then find your user on the"," ",(0,o.kt)("a",{href:"https://radar.com/dashboard/users"},"Users page"),"! To trigger an event, you'll need to"," ",(0,o.kt)("a",{href:"https://radar.com/geofences"},"create a geofence")," if you haven't already. Not seeing your user on the Users page? Check"," ",(0,o.kt)("code",null,"status")," in the callback to see what went wrong."),(0,o.kt)("h2",{id:"background-tracking-for-geofencing"},"Background tracking for geofencing"),(0,o.kt)("p",null,"Once you have initialized the SDK and the user has authorized background permissions, you can start tracking the user's location in the background."),(0,o.kt)("p",null,"The SDK supports custom tracking options as well as three presets."),(0,o.kt)("p",null,"For geofencing, we recommend using ",(0,o.kt)("inlineCode",{parentName:"p"},"RadarTrackingOptions.RESPONSIVE"),". This preset detects whether the device is stopped or moving. When moving, it tells the SDK to send location updates to the server every 2-3 minutes. When stopped, it tells the SDK to shut down to save battery. Once stopped, the device will need to move more than 100 meters to wake up and start moving again."),(0,o.kt)("p",null,"Assuming the user has authorized background permissions, background tracking will work even if the app has been backgrounded or killed, as Android location services will wake up the app to deliver events and the SDK uses ",(0,o.kt)("inlineCode",{parentName:"p"},"JobScheduler")," to schedule network requests."),(0,o.kt)(d.Z,{alertType:"warning",mdxType:"Alert"},"Note that location updates may be delayed significantly by"," ",(0,o.kt)("a",{href:"https://developer.android.com/training/monitoring-device-state/doze-standby"},"Doze Mode"),", ",(0,o.kt)("a",{href:"https://developer.android.com/training/monitoring-device-state/doze-standby"},"App Standby"),", and ",(0,o.kt)("a",{href:"https://developer.android.com/about/versions/oreo/background-location-limits"},"Background Location Limits"),", or if the device has connectivity issues, low battery, or wi-fi disabled.",(0,o.kt)("em",null,(0,o.kt)("strong",null,"In practice, location updates may be sent to the server every 5-10 minutes while moving, faster if you power on the screen or if other apps are requesting location, and slower otherwise."))," These restrictions apply to all apps using location services, not just Radar."),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"Though we recommend using presets for most use cases, you can modify the presets. See the"," ",(0,o.kt)("a",{href:"/sdk/tracking"},"tracking options reference"),"."),(0,o.kt)("p",null,"To start tracking for geofencing, call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.startTracking(RadarTrackingOptions.RESPONSIVE);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.startTracking(RadarTrackingOptions.RESPONSIVE)\n")))),(0,o.kt)("p",null,"To stop tracking (e.g., when the user logs out), call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.stopTracking();\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.stopTracking()\n")))),(0,o.kt)("p",null,"You only need to call these methods once, as these settings will be persisted across app sessions."),(0,o.kt)(d.Z,{alertType:"warning",mdxType:"Alert"},"To test, go for a walk or a drive! Not seeing location updates or events? Remember that, once stopped, the device will need to move more than 100 meters to wake up and start moving again. Also, check your device settings to make sure you've granted background location permissions."),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"Don't forget! You can always find your user on the"," ",(0,o.kt)("a",{href:"https://radar.com/dashboard/users"},"Users page")," or events on the"," ",(0,o.kt)("a",{href:"https://radar.com/dashboard/events"},"Events page"),". To trigger an event, you'll need to ",(0,o.kt)("a",{href:"https://radar.com/geofences"},"create a geofence")," if you haven't already."),(0,o.kt)("h2",{id:"background-tracking-for-trips"},"Background tracking for trips"),(0,o.kt)("p",null,"For trips, we recommend using ",(0,o.kt)("inlineCode",{parentName:"p"},"RadarTrackingOptions.continuous"),". This preset tells the SDK to send location updates to the server every 30 seconds, regardless of whether the device is moving."),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"To avoid"," ",(0,o.kt)("a",{href:"https://developer.android.com/about/versions/oreo/background-location-limits"},"Background Location Limits"),", the continuous preset starts a ",(0,o.kt)("a",{href:"https://developer.android.com/guide/components/foreground-services"},"foreground service")," with a notification while tracking.  When the foreground service with a notification is running, only foreground permissions are required for tracking. See the ",(0,o.kt)("a",{href:"/sdk/tracking#android-foreground-service-options"},"tracking options reference")," to adjust the foreground service notification copy and behavior."),(0,o.kt)("p",null,"To start tracking for trips, call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.startTracking(RadarTrackingOptions.CONTINUOUS);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.startTracking(RadarTrackingOptions.CONTINUOUS)\n")))),(0,o.kt)("p",null,"To stop tracking (e.g., when the user logs out), call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.stopTracking();\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.stopTracking()\n")))),(0,o.kt)("p",null,"Learn more about starting, completing, and canceling trips in the ",(0,o.kt)("a",{parentName:"p",href:"/trip-tracking"},"trip tracking documentation"),"."),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"Don't forget! You can always find your user on the"," ",(0,o.kt)("a",{href:"https://radar.com/dashboard/users"},"Users page")," or events on the"," ",(0,o.kt)("a",{href:"https://radar.com/dashboard/events"},"Events page"),". To trigger an event, you'll need to ",(0,o.kt)("a",{href:"https://radar.com/geofences"},"create a geofence")," or"," ",(0,o.kt)("a",{href:"/trip-tracking"},"start a trip")," if you haven't already."),(0,o.kt)("h2",{id:"mock-tracking-for-testing"},"Mock tracking for testing"),(0,o.kt)("p",null,"Can't go for a walk or a drive? You can simulate a sequence of location updates. For example, to simulate a sequence of 10 location updates every 3 seconds by car from an origin to a destination, call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Location origin = new Location("mock");\norigin.setLatitude(40.78382);\norigin.setLongitude(-73.97536);\n\nLocation destination = new Location("mock");\ndestination.setLatitude(40.70390);\ndestination.setLongitude(-73.98670);\n\nRadar.mockTracking(\n    origin,\n    destination,\n    Radar.RadarRouteMode.CAR,\n    10,\n    3,\n    new RadarCallback() {\n        @Override\n        public void onComplete(RadarStatus status, Location location, RadarEvent[] events, RadarUser user) {\n            // do something with location, events, user\n        }\n    }\n);\n'))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'val origin = Location("mock")\norigin.latitude = 40.78382\norigin.longitude = -73.97536\n\nval destination = Location("mock")\ndestination.latitude = 40.70390\ndestination.longitude = -73.98670\n\nRadar.mockTracking(\n    origin,\n    destination,\n    Radar.RadarRouteMode.CAR,\n    10,\n    3\n) { status, location, events, user ->\n    // do something with location, events, user\n}\n')))),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"Don't forget! You can always find your user on the"," ",(0,o.kt)("a",{href:"https://radar.com/dashboard/users"},"Users page")," or events on the"," ",(0,o.kt)("a",{href:"https://radar.com/dashboard/events"},"Events page"),". To trigger an event, you'll need to ",(0,o.kt)("a",{href:"https://radar.com/geofences"},"create a geofence")," if you haven't already."),(0,o.kt)("h2",{id:"listening-for-events-with-a-receiver"},"Listening for events with a receiver"),(0,o.kt)("p",null,"To listen for events, location updates, and errors client-side, create a class that extends ",(0,o.kt)("inlineCode",{parentName:"p"},"RadarReceiver"),". Then, pass in an instance of your receiver when initializing the SDK in application ",(0,o.kt)("inlineCode",{parentName:"p"},"onCreate()"),"."),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'import io.radar.sdk.Radar;\n\npublic class MyApplication extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        MyRadarReceiver receiver = new MyRadarReceiver();\n        Radar.initialize(this, "prj_test_pk...", receiver);\n    }\n\n}\n'))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'import io.radar.sdk.Radar\n\nclass MyApplication : Application() {\n\n    override fun onCreate() {\n        super.onCreate()\n\n        val receiver = MyRadarReceiver()\n        Radar.initialize(this, "prj_test_pk...", receiver)\n    }\n\n}\n')))),(0,o.kt)("p",null,"Your receiver should implement the following:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public class MyRadarReceiver extends RadarReceiver {\n\n    @Override\n    public void onEventsReceived(Context context, RadarEvent[] events, RadarUser user) {\n        // do something with events, user\n    }\n\n    @Override\n    public void onLocationUpdated(Context context, Location location, RadarUser user) {\n        // do something with location, user\n    }\n\n    @Override\n    public void onClientLocationUpdated(Context context, Location location, boolean stopped, RadarLocationSource source) {\n        // do something with location, stopped, source\n    }\n\n    @Override\n    public void onError(Context context, RadarStatus status) {\n        // do something with status\n    }\n\n    @Override\n    public void onLog(Context context, String message) {\n        // print message for debug logs\n    }\n\n}\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class MyRadarReceiver: RadarReceiver() {\n\n    override fun onEventsReceived(context: Context, events: Array<RadarEvent>, user: RadarUser?) {\n        // do something with events, user\n    }\n\n    override fun onLocationUpdated(context: Context, location: Location, user: RadarUser) {\n        // do something with location, user\n    }\n\n    override fun onClientLocationUpdated(context: Context, location: Location, stopped: Boolean, source: RadarLocationSource) {\n        // do something with location, stopped, source\n    }\n\n    override fun onError(context: Context, status: RadarStatus) {\n        // do something with status\n    }\n\n    override fun onLog(context: Context, message: String) {\n        // print message for debug logs\n    }\n\n}\n")))),(0,o.kt)(d.Z,{alertType:"info",mdxType:"Alert"},"To listen for events server-side instead, add a"," ",(0,o.kt)("a",{href:"/integrations/webhooks"},"webhook")," or enable an"," ",(0,o.kt)("a",{href:"/integrations"},"integration"),"."),(0,o.kt)("h2",{id:"manual-tracking"},"Manual tracking"),(0,o.kt)("p",null,"If you want to manage location services yourself, you can manually update the user's location instead by calling:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.trackOnce(\n    location,\n    new RadarCallback() {\n        @Override\n        public void onComplete(RadarStatus status, Location location, RadarEvent[] events, RadarUser user) {\n            // do something with location, events, user\n        }\n    }\n);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.trackOnce(location) { status, location, events, user ->\n    // do something with location, events, user\n}\n")))),(0,o.kt)("p",null,"where ",(0,o.kt)("inlineCode",{parentName:"p"},"location")," is a ",(0,o.kt)("inlineCode",{parentName:"p"},"Location")," instance with a valid latitude, longitude, and accuracy."),(0,o.kt)("h2",{id:"identify-user"},"Identify user"),(0,o.kt)("p",null,"The SDK automatically generates a unique ",(0,o.kt)("inlineCode",{parentName:"p"},"installId")," on every fresh install. Radar creates a new user record for every unique ",(0,o.kt)("inlineCode",{parentName:"p"},"installId"),"."),(0,o.kt)("p",null,"In addition, you can use other identifiers to identify the user."),(0,o.kt)("p",null,"Radar will automatically identify the user by ",(0,o.kt)("inlineCode",{parentName:"p"},"deviceId")," (",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID"},"Android ID"),")."),(0,o.kt)("p",null,"To set a custom ",(0,o.kt)("inlineCode",{parentName:"p"},"userId"),", call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.setUserId(userId);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.setUserId(userId)\n")))),(0,o.kt)("p",null,"where ",(0,o.kt)("inlineCode",{parentName:"p"},"userId")," is a stable unique ID for the user."),(0,o.kt)(d.Z,{alertType:"warning",mdxType:"Alert"},"Do not send any PII, like names, email addresses, or publicly available IDs, for ",(0,o.kt)("code",null,"userId"),". See"," ",(0,o.kt)("a",{href:"/faqs#what-are-privacy-best-practices-for-radar"},"privacy best practices")," ","for more information."),(0,o.kt)("p",null,"To set a dictionary of custom metadata for the user, call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.setMetadata(metadata);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.setMetadata(metadata)\n")))),(0,o.kt)("p",null,"where ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata")," is a ",(0,o.kt)("inlineCode",{parentName:"p"},"JSONObject")," with up to 16 keys and values of type string, boolean, or number."),(0,o.kt)("p",null,"Finally, to set an optional description for the user, displayed in the dashboard, call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.setDescription(description);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.setDescription(description)\n")))),(0,o.kt)("p",null,"You only need to call these methods once, as these settings will be persisted across app sessions."),(0,o.kt)("h2",{id:"other-apis"},"Other APIs"),(0,o.kt)("p",null,"The Android SDK also exposes APIs for beacons, anonymous context, geocoding, search, and distance."),(0,o.kt)("h3",{id:"beacons"},"Beacons"),(0,o.kt)("p",null,"To range and monitor ",(0,o.kt)("a",{parentName:"p",href:"/beacons"},"beacons"),", you must ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/about/versions/12/features/bluetooth-permissions#declare-new-permissions"},"request Bluetooth permissions"),"."),(0,o.kt)("p",null,"To range beacons in the foreground, call:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.trackOnce(RadarTrackingOptionsDesiredAccuracy.HIGH, true, new RadarCallback() {\n  @Override\n  public void onComplete(RadarStatus status, Location location, RadarEvent[] events, RadarUser user) {\n      // do something with user.beacons\n  }\n});\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.trackOnce(RadarTrackingOptionsDesiredAccuracy.HIGH, true) { status, location, events, user ->\n    // do something with user.beacons\n}\n")))),(0,o.kt)("p",null,"To monitor beacons in the background, update your tracking options:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"RadarTrackingOptions trackingOptions = RadarTrackingOptions.RESPONSIVE;\ntrackingOptions.beacons = true;\nRadar.startTracking(trackingOptions);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"val trackingOptions = RadarTrackingOptions.RESPONSIVE\ntrackingOptions.beacons = true\nRadar.startTracking(trackingOptions)\n")))),(0,o.kt)("p",null,"Learn more about ",(0,o.kt)("a",{parentName:"p",href:"/beacons"},"beacons"),"."),(0,o.kt)("h3",{id:"get-location"},"Get location"),(0,o.kt)("p",null,"Get a single location update without sending it to the server:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.getLocation(new RadarLocationCallback() {\n    @Override\n    public void onComplete(RadarStatus status, Location location, boolean stopped) {\n        // do something with location\n    }\n});\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.getLocation { status, location, stopped ->\n    // do something with location\n}\n")))),(0,o.kt)("h3",{id:"context"},"Context"),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#context"},"context API"),", get context for a location without sending device or user identifiers to the server:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.getContext(new RadarContextCallback() {\n    @Override\n    public void onComplete(RadarStatus status, Location location, RadarContext context) {\n        // do something with context\n    }\n});\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.getContext { status, location, context ->\n    // do something with context\n}\n")))),(0,o.kt)("h3",{id:"geocoding"},"Geocoding"),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#forward-geocode"},"forward geocoding API"),", geocode an address, converting address to coordinates:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Radar.geocode(\n    "20 jay street brooklyn ny", // query\n    new RadarGeocodeCallback() {\n        @Override\n        public void onComplete(RadarStatus status, RadarAddress[] addresses) {\n            // do something with addresses\n        }\n    }\n);\n'))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'Radar.geocode("20 jay street brooklyn ny") { status, addresses ->\n    // do something with addresses\n}\n')))),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#reverse-geocode"},"reverse geocoding API"),", reverse geocode a location, converting coordinates to address:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.reverseGeocode(\n    location,\n    new RadarGeocodeCallback() {\n        @Override\n        public void onComplete(RadarStatus status, RadarAddress[] addresses) {\n            // do something with addresses\n        }\n    }\n);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.reverseGeocode(location) { status, addresses ->\n    // do something with addresses\n}\n")))),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#ip-geocode"},"IP geocoding API"),", geocode the device's current IP address, converting IP address to city, state, and country:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.ipGeocode(new RadarIpGeocodeCallback() {\n    @Override\n    public void onComplete(RadarStatus status, RadarAddress address, boolean proxy) {\n        // do something with address, proxy\n    }\n});\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.ipGeocode { status, address, proxy ->\n    // do something with address, proxy\n}\n")))),(0,o.kt)("h3",{id:"search"},"Search"),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#autocomplete"},"autocomplete API"),", autocomplete partial addresses and place names, sorted by relevance:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Radar.autocomplete(\n    "brooklyn roasting", // query\n    near,\n    10, // limit\n    new RadarGeocodeCallback() {\n        @Override\n        public void onComplete(RadarStatus status, RadarAddress[] addresses) {\n            // do something with addresses\n        }\n    }\n);\n'))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'Radar.autocomplete(\n    "brooklyn roasting", // query\n    near,\n    10 // limit\n) { status, addresses ->\n    // do something with addresses\n}\n')))),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#search-geofences"},"geofence search API"),", search for geofences near a location, sorted by distance:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Radar.searchGeofences(\n    near,\n    1000, // radius (meters)\n    {"store"}, // tags\n    null, //metadata\n    10, // limit\n    new RadarSearchGeofencesCallback() {\n        @Override\n        public void onComplete(RadarStatus status, Location location, RadarGeofence[] geofences) {\n            // do something with geofences\n        }\n    }\n);\n'))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'Radar.searchGeofences(\n    near,\n    1000, // radius (meters)\n    arrayOf("store"), // tags\n    null, // metadata\n    10 // limit\n) { status, location, geofences ->\n    // do something with geofences\n}\n')))),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#search-places"},"places search API"),", search for places near a location, sorted by distance:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Radar.searchPlaces(\n    near,\n    1000, // radius (meters)\n    {"starbucks"}, // chains\n    null, // categories\n    null, //groups\n    10, // limit\n    new RadarSearchPlacesCallback() {\n      @Override\n      public void onComplete(RadarStatus status, Location location, RadarPlace[] places) {\n          // do something with places\n      }\n    }\n);\n'))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'Radar.searchPlaces(\n    near,\n    1000, // radius (meters)\n    arrayOf("starbucks"), // chains\n    null, // categories\n    null, // groups\n    10 // limit\n) { status, location, places ->\n    // do something with places\n}\n')))),(0,o.kt)("h3",{id:"distance"},"Distance"),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#distance"},"distance API"),", calculate the travel distance and duration from an origin to a destination:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.getDistance(\n    origin,\n    destination,\n    EnumSet.of(RadarRouteMode.FOOT, RadarRouteMode.CAR),\n    RadarRouteUnits.IMPERIAL,\n    new RadarRouteCallback() {\n        @Override\n        public void onComplete(RadarStatus status, RadarRoutes routes) {\n            // do something with routes\n        }\n    }\n);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.getDistance(\n    origin,\n    destination,\n    EnumSet.of(RadarRouteMode.FOOT, RadarRouteMode.CAR),\n    RadarRouteUnits.IMPERIAL\n) { status, routes ->\n  // do something with routes\n}\n")))),(0,o.kt)("h3",{id:"matrix"},"Matrix"),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#matrix"},"matrix API"),", calculate the travel distance and duration between multiple origins and destinations for up to 25 routes:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.getMatrix(\n    origins,\n    destinations,\n    RadarRouteMode.CAR,\n    RadarRouteUnits.IMPERIAL,\n    new RadarRouteCallback() {\n        @Override\n        public void onComplete(RadarStatus status, RadarRouteMatrix matrix) {\n            // do something with matrix.routeBetween(originIndex, destinationIndex)\n        }\n    }\n);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.getMatrix(\n    origins,\n    destinations,\n    RadarRouteMode.CAR,\n    RadarRouteUnits.IMPERIAL\n) { status, routes ->\n  // do something with matrix.routeBetween(originIndex, destinationIndex)\n}\n")))),(0,o.kt)("h3",{id:"custom-events"},"Custom events"),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/api#send-a-custom-event"},"custom events API"),", send a custom event, such as a conversion or purchase, to analyze alongside your app's location activity:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.sendEvent(\n    customType,\n    metadata,\n    new RadarSendEventCallback() {\n        @Override\n        public void onComplete(RadarStatus status, Location location, RadarEvent[] events, RadarUser user) {\n            // do something with location, events, user\n            // events[0] is the custom event\n        }\n    }\n)\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.sendEvent(\n    customType,\n    metadata,\n) { status, location, events, user ->\n    // do something with location, events, user\n    // events[0] is the custom event\n}\n")))),(0,o.kt)("h2",{id:"huawei"},"Huawei"),(0,o.kt)("p",null,"By default, the SDK ",(0,o.kt)("a",{parentName:"p",href:"#dependencies"},"depends on")," ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/training/location"},"Google Play Services Location"),". However, you can use ",(0,o.kt)("a",{parentName:"p",href:"https://developer.huawei.com/consumer/en/hms/huawei-locationkit/"},"Huawei Mobile Services Location Kit")," instead."),(0,o.kt)("p",null,"If you haven't already configured your project for Huawei Mobile Services, follow the instructions ",(0,o.kt)("a",{parentName:"p",href:"https://developer.huawei.com/consumer/en/doc/development/HMSCore-Guides/integrate-as-sdk-0000001050168936"},"here"),"."),(0,o.kt)("p",null,"Then, add the dependency to your app's ",(0,o.kt)("inlineCode",{parentName:"p"},"build.gradle")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"dependencies {\n    implementation 'com.huawei.hms:location:6.4.0.300'\n}\n")),(0,o.kt)("p",null,"Finally, pass in ",(0,o.kt)("inlineCode",{parentName:"p"},"RadarLocationServicesProvider.HUAWEI")," when you initialize the SDK:"),(0,o.kt)(i.Z,{groupId:"android",defaultValue:"kotlin",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Radar.initialize(this, publishableKey, receiver, RadarLocationServicesProvider.HUAWEI);\n"))),(0,o.kt)(l.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"Radar.initialize(context, publishableKey, receiver, RadarLocationServicesProvider.HUAWEI)\n")))))}v.isMDXComponent=!0},6010:function(e,a,t){function n(e){var a,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(a=0;a<e.length;a++)e[a]&&(t=n(e[a]))&&(r&&(r+=" "),r+=t);else for(a in e)e[a]&&(r&&(r+=" "),r+=a);return r}function r(){for(var e,a,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(a=n(e))&&(r&&(r+=" "),r+=a);return r}t.d(a,{Z:function(){return r}})}}]);